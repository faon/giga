#!/bin/bash


VERSION=AE:2011-08-11

# ---------------------------------- Config -----------------------------------------------
   LOCAL='/'            # where to install from (default to '/'
   SHARED='/home/safe'  # where to share the executables, in place to local '/'
   DEVEL='/opt/pkg'     # where to develop the packages, with  git control
   STORE='/home/safe/ROCKS/pkg' # where to store the packages
   IDX=4                 # to find the package name (for cut -d/ -fIDX 
                         #    ex /opt/pkg/PACKAGE, IDX=4 : 1/2:opt/3:pkg/4:PACKAGE
   
# -----------------------------------------------------------------------------------------

# -- TODO : create a sumbolic link on nas01 to avoid this :
NODE=$( uname -n | cut -d. -f1 )
if [ $NODE = 'nas01' ]
then
  STORE=/safe/ROCKS/pkg  
else
  STORE=/home/safe/ROCKS/pkg
fi

# ----------------

MODE=debug

help () {
 if [ -z $1 ] || [ $1 = "-h" ]
 then
   echo "Simple package handler ----------------------------------------------- $VERSION"
   echo "Use root based TGZ packages (stored in $STORE)"
   echo "Usage: pkg [-i|-l|-c] name"
   echo "               name : display the informations without installation" 
   echo "            -i name : install the last version of this package (based on /)"
   echo "            -I name : idem (based on $SHARED)" 
   echo "            -l [name] : list all the packages, beginning with [name]"
   echo "            -c name [path] : create the dev tree"    
   echo "            -p [name] : pack the current directory and store it as name [default : path name]"
   echo "            -t [name] : table-of-content of package name"
   echo "TODO : add pkg.prolog & pkg.epilog"
   exit
 fi
}

init () {
 case $1 in
  -i)
    MODE=install
    TARG=$2
  ;;
  -I)
    MODE=INSTALL
    TARG=$2
    ;;
  -l)
    MODE=list
    TARG=$2
    ;;
  -t)
    MODE=toc
    TARG=$2
    ;;
  -p)
    MODE=pack
    TARG=$2
    ;;
  -c)
    MODE=create
    TARG=$2
    PTH=$3
    ;;
 esac
}

# -----------------------------------------------
#    MAIN
# -----------------------------------------------

init $*

LAST=$( ls $STORE/$TARG* | tail -1 )
echo "Node=$NODE PkgDir=$STORE"
echo "Last $TARG is $LAST"

if [ $MODE = 'debug' ]
then
     help
     exit
fi
if [ $MODE = 'list' ]
then
     ls -l $STORE/$TARG*tgz  # works for TARG=''
     exit
fi

if [ -z $LAST ]
then
  echo "LAST $TARG is invalid"
  exit
fi

if [ $MODE = 'install' ]
then
  cd /
  tar -xzvf $LAST
  exit
fi

if [ $MODE = 'INSTALL' ]
then
  cd $SHARED
  tar -xzvf $LAST
  exit
fi

if [ $MODE = 'pack' ]
then
  if [ -z $TARG ]
  then 
    TARG=$( echo $PWD | cut -d/ -f$IDX )  # pis-aller
  fi
  TM=$( date +%y%m%d-%H%M )
  TGZ=${STORE}/${TARG}-${TM}.tgz
  BASE=$( pwd | cut -d/ -f1-${IDX} )
  echo -n ".. saving $TGZ from $BASE (or CTRL-C) : "
  read answ 
  cd $BASE
  tar -czvf $TGZ *
  git commit -a 
  exit
fi

if [ $MODE = 'create' ]
then
  if [ -z $PTH ]
  then
     PTH=/usr/local/sbin
  elif [ ! -d $PTH ]
  then
     echo "$PTH is invalid"
     exit 1
  fi
  TREE="$PWD/$TARG$PTH"  
  echo ".. Creating the dev tree $TREE for $TARG"
  mkdir -p $TREE
  exit
fi

if [ $MODE = 'toc' ]
then
  echo
  echo "----------------------------------------------------------------------------------------------------"
  echo "TOC of $LAST"
  echo
  tar -tzvf $LAST

fi

